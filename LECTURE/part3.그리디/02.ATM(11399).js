"use strict";
// ATM (사람들 줄 서 있음)

// 1(3분)
// 2(1분)
// 3(4분)
// 4(3분)
// 5(2분)

// 각각 사람들이 걸리는 시간..!
// 1번사람 : 3분
// 2번사람 : 4분(3분 + 1분)
// 3번사람 : 8분(4분 + 4분)
// 4번사람 : 11분(8분 + 3분)
// 5번사람 : 13분(11분 + 2분)

// 총 => 39분
// 이걸 최소화 시키려면?

// ==> 각각의 사람이 걸리는 시간을 최소화 시킨다...
// (내 시간 + 이전사람 시간..) => 을 각각 최소화 하려면
// 내 시간을 최소한으로 줄여야 돼!!!

// 3 1 4 3 2

// 1분
// 3분(1 + 2)
// 6분
// 9분
// 13분

// => 32분

// 결국 각각의 사람이 최소 시간이 걸려야 돼!
// 즉, 각 단계에서 1명 1명이 후다닥 끝내버리면 돼!
let input = require("fs").readFileSync("dev/stdin").toString().split("\n");
let N = Number(input[0]);
let arr = input[1].split(" ").map(Number);

// arr.sort((a, b) => a - b); // 내림차순
arr.sort((a, b) => {
  if (a > b) return 1;
  else if (a < b) return -1;
  else return 0;
});
let sum = 0;
let taskTime = 0;
for (let i = 0; i < arr.length; i++) {
  taskTime += arr[i];
  sum += taskTime;
}
console.log(sum);

// 지금 핵심이 뭐냐면..
// 1번 사람 : 내 시간
// 2번 사람 : 내 시간 + 이전 사람 시간....

// 이 총 합이 작아야 한다는건 1 2번 사람 즉, 개개인이 적게 걸려야 한다는 소리!
// 개개인이 적게걸리면 당연히 이전 사람시간도 최소화가 됨.

// 🔹 결국 걸리는 시간 중 가장 작은 순서대로 선택을 해야 함.

// 그니까 푸는 건 전혀 문제 없는데, 생각을 해 내는게 너무 어려움.
// 1 + 3 + 6 + 9 + 13
// 각각의 수가 작아야 해!
