"use strict";
// A를 B로 바꾸기 위해
// 🔹 2를 곱한다.
// 🔸 1을 수의 가장 오른쪽에 추가한다.

// 2 162
// 1을 언제 추가하는게 좋을까?

let input = require("fs").readFileSync("dev/stdin").toString().split("\n");
let [number, N] = input[0].split(" ").map(Number);

// 좋아 푸는 방법 알았어...!
// 2로 나눌 수 없다면 무조건 1을 해줘야돼!

// 1을 없앨 수 있다는 건 뒤 숫자가 1이라는 건데, 2로 나눌 수 없음
// 고로 둘 중 하나만 할 수 있다!!!

// 거꾸로 진행해보자..!
let cnt = 1;
let flag = false; // 만약 N이 number가 된다면..!? true로 바꿔준다.
// 시작부터 A === B는 안 돼!
// 1 <= A < B <= 10^9

while (N >= number) {
  if (N === number) {
    flag = true;
    break;
  }
  if (N % 2 === 0) {
    N = parseInt(N / 2); // parseInt문제라고..?
    // 🔴 여기서 조심해야 돼.... ===> 만약 2로 나눴는데 뒷 자리가 3이 나왔다면....?
  } else if (N % 10 === 1)
    N = parseInt(N / 10); // => 1의 자리가 사라지는구나..!
  else break; // 둘 다 아닐 수가 있나...? 아 2로 나눴는데 3이 나올 수가 있어...
  // 🔴이걸 생각을 못 했네.........🔴
  cnt += 1;
  // 못 나누는 경우...!

  // 1을 없애준다. => 어차피 무조건 맨 뒤가 1이기 때문에,
  // 그냥 맨 뒤 수를 없애주면 된다.
}
if (!flag) {
  console.log(-1);
} else {
  console.log(cnt); // 어차피 1더해서 출력할거라면 cnt를 0부터가 아닌 1부터 시작하면 돼!
}

// else붙여주고 안 붙여주고 차이점 알았어...!!!!
// 뒤에 만약 else를 안 붙여주면
// 예를들면
// 참이면 이걸해라~ 했을 때

// if(참) = (n에서 1을 빼라)
// 근데 else를 안 해주고 n - 2 적으면
// 참인데도 총 3을 뺀다.

// else를 붙으면 그냥 1만 빼준다.

// 🟡 왜 그리디야 🟡
// - 선택 옵션이 항상 정해져있다...!!!
// - 저 둘 중 하나로!

// 그럼 알 수 있어! 선택이 정해져 있어야 그리디로 풀 수 있다는 걸

// 맨 뒷자리 없애주기
// 그 수에 10으로 나눠주면 1의 자리 없어져
// 십의자리까지 없애기
// 100으로 /해주면 돼..!

// 🟠 이런 걸 배우는 거야...! => 꿀팁 🟠
console.log(parseInt(8000234 / 100)); //  10의 자리까지 없어져!
