"use strict";
// up and down game!

// 이진 탐색 : 이미 정렬이 되어 있어야 사용할 수 있다.
// 배열 or 이진트리를 사용하여 구현할 수 있다.
// logN인 만큼 상당히 빠르다.

// 정렬이 안 돼 있으면 정렬하는데 시간 더 걸리니까 그냥 쓰지마!!

// 배열을 이용하는 방법
// 이진 탐색 트리를 이용하는 방법 (왼 < 중 < 우 (같은 값xxx))

// 이진 탐색 트리의 문제점
// 계속 작은 값이 들어올 경우 왼쪽 노드만 계속 생긴다
// 즉, 왼쪽으로 편향된 tree가 생성된다.

// 이럴 경우 순차탐색과 똑같은 시간복잡도를 지닌다...
// 이를 해결하기 위해
// - avl tree
// - 레드 블랙 트리
// 라는 알고리즘을 짤 수 있다.

// 클 경우에만 조사한다!!!

// dom tree : to to list
// calander : 달력..!
// ==> 달력
class Node {
  constructor;
}
