"use strict";
// N일 동안 주식가격 변화를 기준으로 낼 수 있는 가장 큰 수익 계산하기
// # 문제 설명
// - 3일 동안의 주식 가격 [100, 50, 250] => 최대 이익 200;
// - [100, 50, 20] 이면 최대 이익은 0

// 현재 값, max값 => 이익이 날 경우, 전 날 보다 이익이 큰 경우에만..
// 현재 값을 계속 갖고있는다음 다음 값이랑 계산을 해봐야지..

let arr = [100, 50, 20];
let arr2 = [100, 50, 250, 700, 50000000];
let max = 0;
let prev = arr2.shift(); // 100하나를 빼서 처음 기준값으로 잡아준다.

for (let i = 0; i < arr2.length; i++) {
  if (prev >= arr2[i]) {
    // 이전 값이 지금 보다 커.. 그럼 지금 손해!!!!!
    prev = arr2[i]; // 이전값을 바꿔준다..
    // max는 그대로 0 유지.. => 손해보면 무조건 max = 0;
    max = 0;
  } else {
    // 이익이 나왔어!!!!!
    max < arr2[i] - prev && (max = arr2[i] - prev); // 현재 이익이 그 동안의 max보다 크다면! 최대이익이니까.. max를 change!
    prev = arr2[i]; // 그리고 나서 이제 이전 값을 바꿔준다.
  }
}
console.log(`최대 이익 >> ${max}`);

// 내가 푼 방식
// - 첫 번째 값을 하나 빼서, 배열의 각각 오는 값에 이익, 손해를 계산했다...
// - 배열이 너무 많아도.. 사실 하나하나 다 해봐야 최대 이익을 알 수 있으니까 => for문을 최대한 활용함.
