"use strict";
// 자료구조 : 특정 상황에 따라 유용하게 사용될 수 있도록 특정 구조를 이룸.
// => 잘못된 상황에 사용됐을 경우 더 느리게 사용될 수 있으니까
// 어떠한 상황에 사용되는지 제대로 알아야 한다.

// 영화 예매 로직을 백엔드로 구현
// 1. 고객은 어떤 영화를 볼 지 고른다.
// 2. 고객은 영화를 예매하기 위해 줄을 선다.
// 3. 고객은 차례가 왔을 때 좌석을 선택한다.
// 4. 고객은 최종적으로 돈을 지불한다.

// 1. 영화를 검색한다 (트라이 자료구조)
// 2. 티켓팅을 한다(큐 : 먼저 예매 한 사람이 먼저 나감)
// 3. 좌석을 선택한다 (해쉬 테이블)

// ❗️자료구조 종류❗️
// 1. 단순 구조 : 정수 실수 문자열 논리 (배울 부분은 아님)

// 2. 선형 구조 : 배열 연결리스트 스택 큐
// - 한 원소 뒤에 하나의 원소만이 존재하는 자료들이 선형으로 나열이 돼 있는 자료구조

// 3. 비선형 구조 : 트리 그래프
// - 원소 간 다대다 관계를 가지는 구조, 계층형, 망형을 표현할 수 있다.
// ex) 컴퓨터 폴더 구조 => 한 폴더 안에 또 다른 폴더가 여러 개 가능하다.

// ❗️ 완벽한 자료구조는 없다❗️
// 그냥 특정 상황에 맞는 자료구조가 있을 뿐이지 어떤 자료구조가 좋다 이런건 없어❗️

// 명령 4가지!
// 값 확인
// 값 찾기
// 값 추가
// 값 삭제
// 여기서 각 자료구조마다 용이한 명령어들을 파악해보자!
