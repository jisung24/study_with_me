// N의 분해합 : N + (각 N의 자릿수)

// 245의 분해합 : 245 + (2 + 4 + 5)
// 256이다.

// 생성자는 N + (각 N을 이루는 자연수)

// 1 => ( 1 + 1 )
// 2 => ( 2 + 2 )
// 3 => ( 3 + 3 )

// ...
// 10 => (10 + 1)
// 11 => (11 + 2)
// 12 => (12 + 1 + 2) 15
//
// 어떻게 생성자가 없지..?
// 생성자가 여러개... => 일 수가 있나...?

// 256의 생성자는 => 245(245 + 2 + 4 + 5)
// 또 있을수도 있어...!

// 생성자 구하는 방법 (245가 어떻게 나왔지..?)

// 216의 최소 생성자는 198이다.
// 256의 생성자는 245이다.

// 생성자가 있거나(1개, 여러 개), 없거나...
// 256의 생성자는 245이다.
// 216의 최소 생성자는 198이다. (198 + 18)

// 1부터 216까지 반복문 돌려서... 저 공식을 만족시키는 최솟값을 구하자..!
let N = Number(require("fs").readFileSync("dev/stdin").toString());

/**
 * ⭐️ N의 생성자를 구해주는 함수 ⭐️
 * @param {*} N : 입력받은 수
 * @returns 입력받은 수의 생성자들을 return한다.
 */
let makeConstructor = (N) => {
  let answer = [];
  for (let i = 1; i <= N; i++) {
    let eachSum = i // 각 수의 자릿수의 합
      .toString()
      .split("")
      .map(Number)
      .reduce((acc, cur) => acc + cur);

    if (i + eachSum === N) {
      // 각 자릿수의 합과 그 수를 더했을 때 N이 나오면 생성자이다.
      answer.push(i);
      // 생성자는 <= N
      // 1부터 N까지 => 생성자가 무조건있음
      // 생성자(N) + N의 각각의 자릿수 => 256
    }
  }

  // 생성자들을 담고있는 answer이 길이가 0이면 0을 출력 아니라면 answer[0]첫 번째 값을 출력해준다.
  return answer.length === 0 ? 0 : answer[0];
};

console.log(makeConstructor(N));
